{"version":3,"sources":["components/Matrix.js","components/MatrixMultiplication.js","utils.js","pythonWorker.js","App.js","reportWebVitals.js","index.js"],"names":["Matrix","this","props","values","readOnly","onChange","classes","className","divTable","map","row","i","divTableRow","column","j","divTableCol","TextField","cell","value","e","target","Component","defaultProps","readonly","withStyles","theme","button","margin","spacing","width","textAlign","display","borderLeft","borderRight","borderSpacing","clear","MatrixMultiplication","generateExercise","state","maxNumberOfRows","maxNumberOfColumns","generator","then","result","setState","answer","C","col","hasExercise","isGenerating","catch","error","console","log","onChangeHandler","intValue","parseInt","Number","isInteger","matrix","r","c","updateMatrixCell","handleSubmit","event","preventDefault","m","n","p","A","B","isCorrect","lhs","rhs","length","lhsRow","rhsRow","isMatrixEqual","Container","maxWidth","Paper","paper","onSubmit","parameter","type","label","Button","disabled","exercise","Typography","variant","rightAnswer","wrongAnswer","height","float","flexDirection","alignItems","color","Worker_fn","Worker","App","pythonWorker","a","Comlink","PythonWorker","setup","progress","LinearProgress","generateMatmulExercise","position","top","left","transform","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","CssBaseline","document","getElementById"],"mappings":"wTAoCMA,E,4JACJ,WACE,MAAgDC,KAAKC,MAA7CC,EAAR,EAAQA,OAAQC,EAAhB,EAAgBA,SAAUC,EAA1B,EAA0BA,SAAUC,EAApC,EAAoCA,QAEpC,OACE,qBAAKC,UAAWD,EAAQE,SAAxB,SACGL,EAAOM,KAAI,SAACC,EAAKC,GAAN,OACV,qBAAsBJ,UAAWD,EAAQM,YAAzC,SACGF,EAAID,KAAI,SAACI,EAAQC,GAAT,OACP,qBAAKP,UAAWD,EAAQS,YAAxB,SACE,cAACC,EAAA,EAAD,CACET,UAAWD,EAAQW,KACnBC,MAAOL,EACPT,SAAUA,EACVC,SAAU,SAACc,GAAD,OAAOd,EAASM,EAAGG,EAAGK,EAAEC,OAAOF,WAL7C,eAAkDP,EAAlD,YAAuDG,QAF3D,cAAiBH,a,GAPNU,aA+BrBrB,EAAOsB,aAAe,CACpBC,UAAU,EACVlB,SAAU,cAGGmB,mBAnEA,SAACC,GAAD,MAAY,CACzBC,OAAQ,CACNC,OAAQF,EAAMG,QAAQ,EAAG,EAAG,EAAG,IAEjCX,KAAM,CACJY,MAAO,MACPF,OAAQF,EAAMG,QAAQ,GACtB,wBAAyB,CACvBE,UAAW,WAGftB,SAAU,CACRuB,QAAS,cACTF,MAAO,OACPG,WAAY,oBACZC,YAAa,oBACbC,cAAe,MACfP,OAAQF,EAAMG,QAAQ,IAExBhB,YAAa,CACXmB,QAAS,YACTF,MAAO,OACPM,MAAO,QAETpB,YAAa,CAEXgB,QAAS,cACTF,MAAO,WAwCIL,CAAmBxB,GC7DlC,IAyBMoC,E,kDACJ,WAAYlC,GAAQ,IAAD,8BACjB,cAAMA,IAiBRmC,iBAAmB,WACjB,MAAgD,EAAKC,MAA7CC,EAAR,EAAQA,gBAAiBC,EAAzB,EAAyBA,mBACzB,EAAKtC,MACFuC,UAAUF,EAAiBC,GAC3BE,MAAK,SAACC,GACL,EAAKC,SAAL,2BACKD,GADL,IAEEE,OAAQF,EAAOG,EAAErC,KAAI,SAACC,GAAD,OAASA,EAAID,KAAI,SAACsC,GAAD,MAAS,SAC/CC,aAAa,EACbC,cAAc,QAGjBC,OAAM,SAACC,GACNC,QAAQC,IAAIF,OA/BC,EAmCnBG,gBAAkB,SAAC3C,EAAGG,EAAGI,GACvB,IAAMqC,EAAWC,SAAStC,GACtBuC,OAAOC,UAAUH,KACnBrC,EAAQqC,GAEV,IAAMV,EC7EH,SAA0Bc,EAAQhD,EAAGG,EAAGI,GAC7C,OAAOyC,EAAOlD,KAAI,SAACC,EAAKkD,GAAN,OAAYlD,EAAID,KAAI,SAACI,EAAQgD,GAAT,OAAgBD,IAAMjD,GAAKkD,IAAM/C,EAAII,EAAQL,QD4ElEiD,CAAiB,EAAKxB,MAAMO,OAAQlC,EAAGG,EAAGI,GACzD,EAAK0B,SAAS,CACZC,YA1Ce,EA8CnBkB,aAAe,SAACC,GACdA,EAAMC,iBACN,EAAKrB,SACH,CACEK,cAAc,GAEhB,EAAKZ,mBAjDP,EAAKC,MAAQ,CACXC,gBAAiB,EACjBC,mBAAoB,EACpBQ,aAAa,EACbC,cAAc,EACdiB,EAAG,EACHC,EAAG,EACHC,EAAG,EACHC,EAAG,CAAC,CAAC,IACLC,EAAG,CAAC,CAAC,IACLxB,EAAG,CAAC,CAAC,IACLD,OAAQ,CAAC,CAAC,KAdK,E,0CAwDnB,WACE,MAA4F5C,KAAKqC,MAAzFC,EAAR,EAAQA,gBAAiBC,EAAzB,EAAyBA,mBAAoB6B,EAA7C,EAA6CA,EAAGC,EAAhD,EAAgDA,EAAGxB,EAAnD,EAAmDA,EAAGD,EAAtD,EAAsDA,OAAQG,EAA9D,EAA8DA,YAAaC,EAA3E,EAA2EA,aACnE3C,EAAYL,KAAKC,MAAjBI,QAEFiE,ECzFH,SAAuBC,EAAKC,GACjC,GAAID,EAAIE,SAAWD,EAAIC,OACrB,OAAO,EAET,IAAK,IAAI/D,EAAI,EAAGA,EAAI6D,EAAIE,SAAU/D,EAAG,CACnC,IAAMgE,EAASH,EAAI7D,GACbiE,EAASH,EAAI9D,GACnB,GAAIgE,EAAOD,SAAWE,EAAOF,OAC3B,OAAO,EAET,IAAK,IAAI5D,EAAI,EAAGA,EAAI6D,EAAOD,SAAU5D,EACnC,GAAI6D,EAAO7D,KAAO8D,EAAO9D,GACvB,OAAO,EAIb,OAAO,EDyEa+D,CAAc/B,EAAGD,GAEnC,OACE,cAACiC,EAAA,EAAD,CAAWC,SAAS,KAApB,SACE,eAACC,EAAA,EAAD,CAAOzE,UAAWD,EAAQ2E,MAA1B,UACE,uBAAMC,SAAUjF,KAAK8D,aAArB,UACE,cAAC/C,EAAA,EAAD,CAAWT,UAAWD,EAAQ6E,UAAWC,KAAK,SAASlE,MAAOqB,EAAiB8C,MAAM,aACrF,cAACrE,EAAA,EAAD,CAAWT,UAAWD,EAAQ6E,UAAWC,KAAK,SAASlE,MAAOsB,EAAoB6C,MAAM,gBACxF,cAACC,EAAA,EAAD,CAAQ/E,UAAWD,EAAQoB,OAAQ0D,KAAK,SAASG,SAAUtC,EAA3D,6BAIF,sBAAK1C,UAAWD,EAAQkF,SAAxB,UACGxC,EACC,qCACE,cAAC,EAAD,CAAQ7C,OAAQkE,EAAGjE,UAAU,IAC7B,cAAC,EAAD,CAAQD,OAAQmE,EAAGlE,UAAU,IAC7B,qCACA,cAAC,EAAD,CAAQD,OAAQ0C,EAAQzC,UAAU,EAAOC,SAAUJ,KAAKqD,qBAG1D,cAACmC,EAAA,EAAD,CAAYC,QAAQ,QAApB,yDAED1C,EACC,8BACGuB,EACC,cAACkB,EAAA,EAAD,CAAYlF,UAAWD,EAAQqF,YAAaD,QAAQ,QAApD,qBAIA,cAACD,EAAA,EAAD,CAAYlF,UAAWD,EAAQsF,YAAaF,QAAQ,QAApD,yBAMJ,e,GAjGqBrE,aA+GpBG,eAxIA,SAACC,GAAD,MAAY,CACzBwD,MAAO,CACLY,OAAQ,SAEVnE,OAAQ,CACNC,OAAQF,EAAMG,QAAQ,EAAG,EAAG,EAAG,GAC/BkE,MAAO,SAETX,UAAW,CACTtD,MAAO,OACPF,OAAQF,EAAMG,QAAQ,IAExB4D,SAAU,CACRzD,QAAS,OACTgE,cAAe,MACfC,WAAY,UAEdL,YAAa,CACXM,MAAO,SAETL,YAAa,CACXK,MAAO,UAmHIzE,CAAmBY,G,QEnJnB,SAAS8D,IACtB,OAAO,IAAIC,OAAO,IAA0B,6CCQ9C,IASMC,E,kDACJ,WAAYlG,GAAQ,IAAD,8BACjB,cAAMA,IAEDoC,MAAQ,CACX+D,aAAc,MAJC,E,4FAQnB,4BAAAC,EAAA,6DACQD,EAAeE,IAAa,IAAIC,GACtCpD,QAAQC,IAAI,iBAFd,SAGQgD,EAAaI,QAHrB,OAIErD,QAAQC,IAAI,kBACZpD,KAAK2C,SAAS,CAAEyD,iBALlB,gD,0EAQA,WACE,IAAQA,EAAiBpG,KAAKqC,MAAtB+D,aACA/F,EAAYL,KAAKC,MAAjBI,QAER,OAAuB,MAAhB+F,EACL,sBAAK9F,UAAWD,EAAQoG,SAAxB,UACE,cAACjB,EAAA,EAAD,CAAYC,QAAQ,KAApB,4BACA,cAACiB,EAAA,EAAD,OAGF,8BACE,cAAC,EAAD,CAAsBlE,UAAW4D,EAAaO,+B,GA5BpCvF,aAsCHG,eA/CA,SAACC,GAAD,MAAY,CACzBiF,SAAU,CACRG,SAAU,QACVC,IAAK,MACLC,KAAM,MACNC,UAAW,4BA0CAxF,CAAmB4E,GC5CnBa,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBzE,MAAK,YAAkD,IAA/C0E,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCAdO,IAASC,OACP,qCACE,cAACC,EAAA,EAAD,IACA,cAAC,EAAD,OAEFC,SAASC,eAAe,SAG1BZ,M","file":"static/js/main.89a6844d.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport TextField from '@material-ui/core/TextField'\n\nconst styles = (theme) => ({\n  button: {\n    margin: theme.spacing(1, 1, 0, 0)\n  },\n  cell: {\n    width: '4ch',\n    margin: theme.spacing(1),\n    '& .MuiInputBase-input': {\n      textAlign: 'center'\n    }\n  },\n  divTable: {\n    display: 'inline-flex',\n    width: 'auto',\n    borderLeft: '1px solid #666666',\n    borderRight: '1px solid #666666',\n    borderSpacing: '5px',\n    margin: theme.spacing(1)\n  },\n  divTableRow: {\n    display: 'table-row',\n    width: 'auto',\n    clear: 'both'\n  },\n  divTableCol: {\n    // float: 'left' /* fix for  buggy browsers */,\n    display: 'tableColumn',\n    width: 'auto'\n  }\n})\n\nclass Matrix extends Component {\n  render() {\n    const { values, readOnly, onChange, classes } = this.props\n\n    return (\n      <div className={classes.divTable}>\n        {values.map((row, i) => (\n          <div key={`row-${i}`} className={classes.divTableRow}>\n            {row.map((column, j) => (\n              <div className={classes.divTableCol} key={`cell-${i}-${j}`}>\n                <TextField\n                  className={classes.cell}\n                  value={column}\n                  readOnly={readOnly}\n                  onChange={(e) => onChange(i, j, e.target.value)}\n                />\n              </div>\n            ))}\n          </div>\n        ))}\n      </div>\n    )\n  }\n}\n\nMatrix.propTypes = {\n  values: PropTypes.arrayOf(PropTypes.array),\n  onChange: PropTypes.func,\n  readOnly: PropTypes.bool\n}\n\nMatrix.defaultProps = {\n  readonly: false,\n  onChange: () => {}\n}\n\nexport default withStyles(styles)(Matrix)\n","import React, { Component } from 'react'\nimport { withStyles } from '@material-ui/core/styles'\nimport PropTypes from 'prop-types'\nimport Container from '@material-ui/core/Container'\nimport Paper from '@material-ui/core/Paper'\nimport TextField from '@material-ui/core/TextField'\nimport Button from '@material-ui/core/Button'\nimport Typography from '@material-ui/core/Typography'\nimport Matrix from './Matrix'\nimport { updateMatrixCell, isMatrixEqual } from '../utils'\n\nconst styles = (theme) => ({\n  paper: {\n    height: '100vh'\n  },\n  button: {\n    margin: theme.spacing(1, 1, 0, 0),\n    float: 'right'\n  },\n  parameter: {\n    width: '12ch',\n    margin: theme.spacing(1)\n  },\n  exercise: {\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  rightAnswer: {\n    color: 'green'\n  },\n  wrongAnswer: {\n    color: 'red'\n  }\n})\n\nclass MatrixMultiplication extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      maxNumberOfRows: 3,\n      maxNumberOfColumns: 3,\n      hasExercise: false,\n      isGenerating: false,\n      m: 1,\n      n: 1,\n      p: 1,\n      A: [[0]],\n      B: [[0]],\n      C: [[0]],\n      answer: [[0]]\n    }\n  }\n\n  generateExercise = () => {\n    const { maxNumberOfRows, maxNumberOfColumns } = this.state\n    this.props\n      .generator(maxNumberOfRows, maxNumberOfColumns)\n      .then((result) => {\n        this.setState({\n          ...result,\n          answer: result.C.map((row) => row.map((col) => '')),\n          hasExercise: true,\n          isGenerating: false\n        })\n      })\n      .catch((error) => {\n        console.log(error)\n      })\n  }\n\n  onChangeHandler = (i, j, value) => {\n    const intValue = parseInt(value)\n    if (Number.isInteger(intValue)) {\n      value = intValue\n    }\n    const answer = updateMatrixCell(this.state.answer, i, j, value)\n    this.setState({\n      answer\n    })\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault()\n    this.setState(\n      {\n        isGenerating: true\n      },\n      this.generateExercise\n    )\n  }\n\n  render() {\n    const { maxNumberOfRows, maxNumberOfColumns, A, B, C, answer, hasExercise, isGenerating } = this.state\n    const { classes } = this.props\n\n    const isCorrect = isMatrixEqual(C, answer)\n\n    return (\n      <Container maxWidth=\"sm\">\n        <Paper className={classes.paper}>\n          <form onSubmit={this.handleSubmit}>\n            <TextField className={classes.parameter} type=\"number\" value={maxNumberOfRows} label=\"Max Rows\" />\n            <TextField className={classes.parameter} type=\"number\" value={maxNumberOfColumns} label=\"Max Columns\" />\n            <Button className={classes.button} type=\"submit\" disabled={isGenerating}>\n              New Exercise\n            </Button>\n          </form>\n          <div className={classes.exercise}>\n            {hasExercise ? (\n              <>\n                <Matrix values={A} readOnly={true} />\n                <Matrix values={B} readOnly={true} />\n                <span>=</span>\n                <Matrix values={answer} readOnly={false} onChange={this.onChangeHandler} />\n              </>\n            ) : (\n              <Typography variant=\"body1\">Click the button to generate a new exercise</Typography>\n            )}\n            {hasExercise ? (\n              <div>\n                {isCorrect ? (\n                  <Typography className={classes.rightAnswer} variant=\"body1\">\n                    Correct\n                  </Typography>\n                ) : (\n                  <Typography className={classes.wrongAnswer} variant=\"body1\">\n                    Incorrect\n                  </Typography>\n                )}\n              </div>\n            ) : (\n              ''\n            )}\n          </div>\n        </Paper>\n      </Container>\n    )\n  }\n}\n\nMatrixMultiplication.propTypes = {\n  classes: PropTypes.object,\n  generator: PropTypes.func\n}\n\nexport default withStyles(styles)(MatrixMultiplication)\n","export function updateMatrixCell(matrix, i, j, value) {\n  return matrix.map((row, r) => row.map((column, c) => (r === i && c === j ? value : column)))\n}\n\nexport function getMatrixShape(matrix) {\n  return [matrix.length, matrix.length === 0 ? 0 : matrix[0].length]\n}\n\nexport function isMatrixEqual(lhs, rhs) {\n  if (lhs.length !== rhs.length) {\n    return false\n  }\n  for (let i = 0; i < lhs.length; ++i) {\n    const lhsRow = lhs[i]\n    const rhsRow = rhs[i]\n    if (lhsRow.length !== rhsRow.length) {\n      return false\n    }\n    for (let j = 0; j < lhsRow.length; ++j) {\n      if (lhsRow[j] !== rhsRow[j]) {\n        return false\n      }\n    }\n  }\n  return true\n}\n","export default function Worker_fn() {\n  return new Worker(__webpack_public_path__ + \"static/js/pythonWorker.d41e1e28.worker.js\");\n}\n","import React, { Component } from 'react'\nimport { withStyles } from '@material-ui/core/styles'\nimport PropTypes from 'prop-types'\nimport LinearProgress from '@material-ui/core/LinearProgress'\nimport Typography from '@material-ui/core/Typography'\nimport MatrixMultiplication from './components/MatrixMultiplication'\nimport * as Comlink from 'comlink/dist/esm/comlink'\nimport PythonWorker from 'worker-loader!./pythonWorker.js' // eslint-disable-line import/no-webpack-loader-syntax\n\nconst styles = (theme) => ({\n  progress: {\n    position: 'fixed',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)'\n  }\n})\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      pythonWorker: null\n    }\n  }\n\n  async componentDidMount() {\n    const pythonWorker = Comlink.wrap(new PythonWorker())\n    console.log('Calling setup')\n    await pythonWorker.setup()\n    console.log('Setup returned')\n    this.setState({ pythonWorker })\n  }\n\n  render() {\n    const { pythonWorker } = this.state\n    const { classes } = this.props\n\n    return pythonWorker == null ? (\n      <div className={classes.progress}>\n        <Typography variant=\"h2\">Loading Python</Typography>\n        <LinearProgress />\n      </div>\n    ) : (\n      <div>\n        <MatrixMultiplication generator={pythonWorker.generateMatmulExercise} />\n      </div>\n    )\n  }\n}\n\nApp.propTypes = {\n  classes: PropTypes.object\n}\n\nexport default withStyles(styles)(App)\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport '@fontsource/roboto'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <>\n    <CssBaseline />\n    <App />\n  </>,\n  document.getElementById('root')\n)\n\nreportWebVitals()\n"],"sourceRoot":""}